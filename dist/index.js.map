{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;;AAEA;;;;;;;;;;;;;;;;AACA;;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAGA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAMA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;AA7EA;;AAgFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;;AAGA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAMA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;AAvEA;;AA0EA;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AAAA;;AAKA;;;;;;;;;;;;;;;;;;;;;ACNA;AAQA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;;AAMA;AAKA;;AAAA;;AAAA;AAMA;;AAEA;AACA;AACA;AACA;;AAXA;AAcA;AACA;;AAEA;AACA;;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AA9BA;AAiCA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAhDA;AACA;AACA;;AAiDA;;;;;;;;;;;;;;;;;;;;;;;;AClEA;;AAEA;AAGA;;AAAA;;AAAA;AAKA;AACA;;AALA;AACA;;AAOA;;;;;;;;;;;ACdrrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;;AAGA;AACA;AACA;;AAGA;AACA","sources":["webpack://@santeacademie/bigbrowser/./src/lib/controller/Pipedrive/ReachCounter/ReachCounter.ts","webpack://@santeacademie/bigbrowser/./src/lib/controller/Pipedrive/ReachCounter/ReachCounter2.ts","webpack://@santeacademie/bigbrowser/./src/lib/controller/TamperController.ts","webpack://@santeacademie/bigbrowser/./src/lib/core/router/TamperRequest.ts","webpack://@santeacademie/bigbrowser/./src/lib/core/router/TamperRouter.ts","webpack://@santeacademie/bigbrowser/./src/lib/index.ts","webpack://@santeacademie/bigbrowser/./node_modules/uri-template-router/index.js","webpack://@santeacademie/bigbrowser/./src/lib/controller|eager|/^\\.\\/.*$/|groupOptions: {}|namespace object","webpack://@santeacademie/bigbrowser/webpack/bootstrap","webpack://@santeacademie/bigbrowser/webpack/runtime/define property getters","webpack://@santeacademie/bigbrowser/webpack/runtime/hasOwnProperty shorthand","webpack://@santeacademie/bigbrowser/webpack/runtime/make namespace object","webpack://@santeacademie/bigbrowser/./src/sandbox/index.ts"],"sourcesContent":["import TamperController from '../../TamperController';\nimport TamperRequest from '../../../core/router/TamperRequest';\n\nlet jQuery: any = null;\n\nclass ReachCounter extends TamperController {\n\tloaded = false;\n\thashTryReachField = 'a9a1a17c4397010006c2aa550dca0cab13ed3419';\n\n\trun = (request: TamperRequest): void => {\n\t\tthis._injectScript();\n\n\t\tsetTimeout(() => {\n\t\t\tthis.launchTryReach();\n\t\t}, 500);\n\t};\n\n\t_injectScript = (): void => {\n\t\tconst script = document.createElement('script');\n\t\tscript.setAttribute('src', 'https://code.jquery.com/jquery.js');\n\t\tdocument.getElementsByTagName('body')[0].appendChild(script);\n\t\tvoid script;\n\t\tconsole.log(script);\n\t};\n\n\tlaunchTryReach = (): void => {\n\t\tif (this.loaded === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.loaded = true;\n\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tjQuery = window.jQuery;\n\t\tconst $body: any = jQuery('body');\n\n\t\t$body.on('click', 'td[data-field=\"' + this.hashTryReachField + '\"].gridRow__cell:not(\".gridRow__cell--editing\") button', () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.addButtonToPopover();\n\t\t\t}, 200);\n\t\t});\n\t\t$body.on('click', '.sub-one-tryreach', () => {\n\t\t\tthis.subOneTryReach(jQuery(this).closest('.item'));\n\t\t});\n\t\t$body.on('click', '.add-one-tryreach', () => {\n\t\t\tthis.addOneTryReach(jQuery(this).closest('.item'));\n\t\t});\n\t};\n\n\taddButtonToPopover = (): void => {\n\t\tconst $item: any = jQuery('.changeFieldValue.' + this.hashTryReachField + ' .item');\n\t\t$item.find('.valueWrap').prepend(`\n\t\t        <div style=\"display:flex;justify-content:space-between;margin-bottom:3px;\">\n\t\t            <button style=\"padding:5px 10px;cursor: pointer;\" class=\"sub-one-tryreach\">-1</button>\n\t\t            <button style=\"padding:5px 10px;cursor: pointer;\" class=\"add-one-tryreach\">+1</button>\n\t\t        </div>\n\t\t    `);\n\t\t$item.find('.select2-container').hide();\n\t\t$item.find('select').removeClass('select2-offscreen');\n\t};\n\n\tsubOneTryReach = ($item: any): void => {\n\t\tconst $select: any = $item.find('select[name=\"' + this.hashTryReachField + '\"]');\n\t\tconst index: any = $select.prop('selectedIndex');\n\n\t\tif (index > 1) {\n\t\t\t$select.prop('selectedIndex', index - 1);\n\t\t}\n\n\t\t$select.trigger('change');\n\t};\n\n\taddOneTryReach = ($item: any): void => {\n\t\tconst $select: any = $item.find('select[name=\"' + this.hashTryReachField + '\"]');\n\t\tconst index: any = $select.prop('selectedIndex');\n\n\t\tif (index < $select.find('option').length - 1) {\n\t\t\t$select.prop('selectedIndex', Math.min(index + 1));\n\t\t}\n\n\t\t$select.trigger('change');\n\t};\n}\n\nexport default ReachCounter;\n","import TamperController from '../../TamperController';\nimport TamperRequest from '../../../core/router/TamperRequest';\n\nclass ReachCounter2 extends TamperController {\n\trun = (request: TamperRequest): void => {\n\t\tconst script = document.createElement('script');\n\t\tscript.setAttribute('src', 'https://code.jquery.com/jquery.js');\n\t\tdocument.getElementsByTagName('body')[0].appendChild(script);\n\t\tvoid script;\n\n\t\tlet launched = false;\n\n\t\tsetTimeout(function () {\n\t\t\tlaunchTryReach();\n\t\t}, 500);\n\n\t\tconst hashTryReachField = 'a9a1a17c4397010006c2aa550dca0cab13ed3419';\n\t\tconst jQuery: any = null;\n\n\t\tfunction launchTryReach() {\n\t\t\tif (launched === true) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlaunched = true;\n\n\t\t\tconst $body: any = jQuery('body');\n\n\t\t\t$body.on('click', 'td[data-field=\"' + hashTryReachField + '\"].gridRow__cell:not(\".gridRow__cell--editing\") button', function () {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\taddButtonToPopover();\n\t\t\t\t}, 200);\n\t\t\t});\n\t\t\t$body.on('click', '.sub-one-tryreach', function () {\n\t\t\t\tsubOneTryReach(jQuery(this).closest('.item'));\n\t\t\t});\n\t\t\t$body.on('click', '.add-one-tryreach', function () {\n\t\t\t\taddOneTryReach(jQuery(this).closest('.item'));\n\t\t\t});\n\t\t}\n\n\t\tfunction addButtonToPopover() {\n\t\t\tconst $item: any = jQuery('.changeFieldValue.' + hashTryReachField + ' .item');\n\t\t\t$item.find('.valueWrap').prepend(`\n\t\t        <div style=\"display:flex;justify-content:space-between;margin-bottom:3px;\">\n\t\t            <button style=\"padding:5px 10px;cursor: pointer;\" class=\"sub-one-tryreach\">-1</button>\n\t\t            <button style=\"padding:5px 10px;cursor: pointer;\" class=\"add-one-tryreach\">+1</button>\n\t\t        </div>\n\t\t    `);\n\t\t\t$item.find('.select2-container').hide();\n\t\t\t$item.find('select').removeClass('select2-offscreen');\n\t\t}\n\n\t\tfunction subOneTryReach($item: any) {\n\t\t\tconst $select: any = $item.find('select[name=\"' + hashTryReachField + '\"]');\n\t\t\tconst index: any = $select.prop('selectedIndex');\n\n\t\t\tif (index > 1) {\n\t\t\t\t$select.prop('selectedIndex', index - 1);\n\t\t\t}\n\n\t\t\t$select.trigger('change');\n\t\t}\n\n\t\tfunction addOneTryReach($item: any) {\n\t\t\tconst $select: any = $item.find('select[name=\"' + hashTryReachField + '\"]');\n\t\t\tconst index: any = $select.prop('selectedIndex');\n\n\t\t\tif (index < $select.find('option').length - 1) {\n\t\t\t\t$select.prop('selectedIndex', Math.min(index + 1));\n\t\t\t}\n\n\t\t\t$select.trigger('change');\n\t\t}\n\t};\n}\n\nexport default ReachCounter2;\n","import TamperRequest from '../core/router/TamperRequest';\n\nabstract class TamperController {\n\tconstructor() {}\n\n\tabstract run(request: TamperRequest): void;\n}\n\nexport default TamperController;\n","import {Router, Result, Route} from 'uri-template-router';\n\nclass TamperRequest {\n\trouteName: string;\n\tparams: any;\n\turi: string;\n\turiTemplate: string;\n\troute: Route;\n\trouter: Router;\n\n\tconstructor(result?: Result) {\n\t\tthis.routeName = result?.matchValue || '';\n\t\tthis.params = result?.params || {};\n\t\tthis.uri = result?.uri || '';\n\t\tthis.uriTemplate = result?.uriTemplate || '';\n\t\tthis.route = result?.route || null;\n\t\tthis.router = result?.router || null;\n\t}\n}\n\nexport default TamperRequest;\n","import routes from '../../config/routes.json';\nimport TamperController from '../../controller/TamperController';\nimport {Router, Result} from 'uri-template-router';\nimport TamperRequest from './TamperRequest';\n\ntype TamperControllers = {\n\t[key: string]: TamperController;\n};\n\nclass TamperRouter {\n\tconfigRoutes: any;\n\tcontrollers: TamperControllers;\n\trouter: Router;\n\n\tconstructor() {\n\t\tthis.controllers = {};\n\t\tthis.router = new Router();\n\t}\n\n\tinit = (): void => {\n\t\tthis.configRoutes = routes['routes'];\n\n\t\tthis.configRoutes.forEach((route: any) => {\n\t\t\tthis._checkRoute(route.name, route.patterns, route.action, route.debug);\n\t\t});\n\t};\n\n\t_checkRoute = (name: string, patterns: string[], action: string, debug: boolean): void => {\n\t\tconst url = document.location.href;\n\t\tlet resolvedRouter: Result = undefined;\n\n\t\tfor (let r = 0; r < patterns.length; r++) {\n\t\t\tthis.router.addTemplate(patterns[r], {}, name);\n\t\t\tresolvedRouter = this.router.resolveURI(url);\n\n\t\t\tif (resolvedRouter) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (resolvedRouter || debug) {\n\t\t\tconst [controllerDirectory, controllerName] = action.split(':');\n\t\t\tthis._instanciateController(controllerDirectory, controllerName, new TamperRequest(resolvedRouter));\n\t\t}\n\t};\n\n\t_instanciateController = (directory: string, name: string, request: TamperRequest): void => {\n\t\timport(/* webpackMode: \"eager\" */ `../../controller/${directory}/${name}/${name}`).then((module) => {\n\t\t\tconst instance: TamperController = new module.default();\n\t\t\tconst parent: string = Object.getPrototypeOf(Object.getPrototypeOf(instance)).constructor.name;\n\n\t\t\tif (parent !== TamperController.name) {\n\t\t\t\tthrow new Error(`Controller ${directory}:${name} is not a TamperController`);\n\t\t\t}\n\n\t\t\tif (!instance.run) {\n\t\t\t\tthrow new Error(`Controller ${directory}:${name} has no 'run' method`);\n\t\t\t}\n\n\t\t\tconsole.debug(`Invoke ${directory}:${name} controller`);\n\t\t\tthis.controllers[name] = instance;\n\t\t\tinstance.run(request);\n\t\t});\n\t};\n}\n\nexport default TamperRouter;\n","import TamperRouter from './core/router/TamperRouter';\n\nclass App {\n\trouter: TamperRouter;\n\n\tconstructor() {\n\t\tthis.router = new TamperRouter();\n\t}\n\n\tinit = (): void => {\n\t\tthis.router.init();\n\t};\n}\n\nexport default App;\n","\"use strict\";\n\nmodule.exports.Router = Router;\n\nfunction CharacterRange(label, ranges){\n\tthis.label = label;\n\tconst set = new Set;\n\tranges.forEach(function(chr){\n\t\tif(chr.length==1){\n\t\t\tset.add(chr);\n\t\t}else if(chr.length==2){\n\t\t\tfor(var i=chr.charCodeAt(0), end=chr.charCodeAt(1); i<=end; i++){\n\t\t\t\tset.add(String.fromCharCode(i));\n\t\t\t}\n\t\t}\n\t});\n\tthis.test = function test(chr){\n\t\tif(chr && chr[0]==='%' && chr.match(/^%[0-9A-F]{2}$/)) return true;\n\t\treturn set.has(chr);\n\t};\n\tthis.sortSize = set.size;\n}\nCharacterRange.prototype.toString = function toString(){\n\treturn '['+this.label+']';\n};\n\nconst RANGE_UNRESERVED = new CharacterRange('UNRESERVED', ['-.', '09', 'AZ', '_', 'az', '~']);\nconst RANGE_RESERVED_UNRESERVED = new CharacterRange('RESERVED_UNRESERVED', ['#', '&', '()', '*;', '=', '?[', ']', '_', 'az', '~']);\n// const RANGE_QUERY = new CharacterRange('QUERY', [\n// \t'AZ', 'az', '09', \"-\", \".\", \"_\", \"~\", // unreserved (from pchar)\n// \t\"!\", \"$\", \"&\", \"'\", \"(\", \")\", \"*\", \"+\", \",\", \";\", \"=\", // sub-delims (from pchar)\n// \t':', '@', // colon and at-sign (from pchar)\n// \t'/', '?', // and slash and question-mark\n// ]);\n\nfunction sortRanges(a, b){\n\treturn a.sortSize - b.sortSize;\n}\n\nfunction encodeURIComponent_v(v){\n\treturn encodeURIComponent(v).replace(/!/g, '%21');\n}\n\nfunction Operator(prefix, separator, delimiter, range, named, form){\n\tthis.prefix = prefix;\n\tthis.separator = separator;\n\tthis.delimiter = delimiter;\n\tthis.range = range;\n\tthis.named = named;\n\tthis.form = form;\n\tthis.encode = (range===RANGE_RESERVED_UNRESERVED) ? encodeURI : encodeURIComponent_v;\n}\n\nconst operators = {\n\t'': new Operator( '',  ',', null, RANGE_UNRESERVED, false),\n\t'+': new Operator('',  ',', null, RANGE_RESERVED_UNRESERVED, false),\n\t'#': new Operator('#', ',', null, RANGE_RESERVED_UNRESERVED, false),\n\t'.': new Operator('.', '.', '.',  RANGE_UNRESERVED, false),\n\t'/': new Operator('/', '/', '/',  RANGE_UNRESERVED, false),\n\t';': new Operator(';', ';', ';',  RANGE_UNRESERVED, true, false),\n\t'?': new Operator('?', '&', '&',  RANGE_UNRESERVED, true, true),\n\t'&': new Operator('&', '&', '&',  RANGE_UNRESERVED, true, true),\n};\n\nfunction Router(){\n\tthis.clear();\n}\n\nRouter.prototype.clear = function clear(){\n\tthis.nid = 0;\n\tthis.tree = new Node(null, ++this.nid);\n\tthis.routeSet = new Set;\n\tthis.templateRouteMap = new Map;\n\tthis.valueRouteMap = new Map;\n};\n\nRouter.prototype.hasRoute = function hasRoute(route){\n\treturn this.routeSet.has(route);\n};\n\nObject.defineProperty(Router.prototype, \"size\", {\n\tget: function sizeGet(){ return this.routeSet.size; },\n});\n\nObject.defineProperty(Router.prototype, \"routes\", {\n\tget: function routesGet(){ return Array.from(this.routeSet); },\n});\n\nRouter.prototype.getTemplate = function getTemplate(uriTemplate){\n\tif(typeof uriTemplate !== 'string') throw new Error('Expected string `uriTemplate`');\n\treturn this.templateRouteMap.get(uriTemplate);\n};\n\nRouter.prototype.hasTemplate = function hasTemplate(uriTemplate){\n\tif(typeof uriTemplate !== 'string') throw new Error('Expected string `uriTemplate`');\n\treturn this.templateRouteMap.has(uriTemplate);\n};\n\nRouter.prototype.getValue = function getValue(matchValue){\n\treturn this.valueRouteMap.get(matchValue);\n};\n\nRouter.prototype.hasValue = function hasValue(matchValue){\n\treturn this.valueRouteMap.has(matchValue);\n};\n\n// A node on the tree is a list of various options to try to match against an input character.\n// The \"next\" and \"list_set\" options specify another branch to also try and match against the current input character.\n// The \"template_match\" option specifies the end of the template was reached, and to return a successful match result. This is usually only reachable immediately after matching an EOF.\nfunction Node(range, nid){\n\tthis.range = range;\n\tthis.nid = nid;\n\tthis.chr_offset = null;\n\t// If we're currently in an expression\n\tthis.match_range = null;\n\t// If we reach this branch, declare a match for this template\n\tthis.template_match = null;\n\n\t// Literal characters to match\n\tthis.match_chr = {};\n\t// Expression prefixes to match\n\tthis.match_pfx = {};\n\t// Alternative sets to try matching at the same time\n\tthis.list_set = {};\n\t// The keys have an order, keep track of the order here\n\tthis.list_set_keys = [];\n\t// Descend into this for more alternatives\n\tthis.list_next = null;\n\tthis.list_skp = null;\n\tthis.list_skp_nid = null;\n}\nNode.prototype.test = function test(chr){\n\tif(this.range===undefined){\n\t\t// Undefined matches everything\n\t\treturn true;\n\t}else if(this.range===null || typeof this.range==='string'){\n\t\treturn chr===this.range;\n\t}else if(this.range && this.range.test){\n\t\treturn this.range.test(chr);\n\t}\n\n};\nNode.prototype.toString = function toString(){\n\treturn '[Node '+this.nid+']';\n};\n\nvar rule_literals = /([\\x21\\x23-\\x24\\x26\\x28-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E\\xA0-\\uD7FF\\uE000-\\uFDCF\\uFDF0-\\uFFEF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|%[0-9A-Fa-f][0-9A-Fa-f])/;\nvar rule_varspec = /^([0-9A-Za-z_]|%[0-9A-Fa-f]{2})(\\.?([0-9A-Za-z_]|%[0-9A-Fa-f]{2}))*(:[0-9]{0,3}|\\*)?$/;\n\nmodule.exports.Route = Route;\nfunction Route(uriTemplate, options, matchValue){\n\tif(typeof uriTemplate!=='string') throw new Error('Expected `uriTemplate` to be a string');\n\tthis.uriTemplate = uriTemplate;\n\tthis.options = options;\n\tthis.matchValue = matchValue;\n\n\t// Parse the URI template\n\tvar varnames = this.varnames = {};\n\tvar variables = this.variables = [];\n\tvar tokens = this.tokens = [];\n\tvar expressionList = [];\n\tfor(var uri_i=0; uri_i<uriTemplate.length; uri_i++){\n\t\tvar chr = uriTemplate[uri_i];\n\t\tif(chr==='%'){\n\t\t\tif(uriTemplate.substring(uri_i, uri_i+3).match(/^%[0-9A-F]{2}$/)){\n\t\t\t\tchr += uriTemplate[uri_i+1] + uriTemplate[uri_i+2];\n\t\t\t\turi_i += 2;\n\t\t\t}else{\n\t\t\t\tthrow new Error('Invalid pct-encoded sequence '+JSON.stringify(uriTemplate.substring(uri_i, uri_i+3)));\n\t\t\t}\n\t\t}\n\t\tif(chr=='{'){\n\t\t\tvar endpos = uriTemplate.indexOf('}', uri_i+2);\n\t\t\tif(endpos<0) throw new Error('Unclosed expression: Expected \"}\" but found end of template');\n\t\t\tvar patternBody = uriTemplate.substring(uri_i+1, endpos);\n\t\t\turi_i = endpos;\n\t\t\t// If the first character is part of a valid variable name, assume the default operator\n\t\t\t// Else, assume the first character is a operator\n\t\t\tvar operatorChar = patternBody[0].match(/[a-zA-Z0-9_%]/) ? '' : patternBody[0] ;\n\t\t\tvar operator = operators[operatorChar];\n\t\t\tif(!operator){\n\t\t\t\tthrow new Error('Unknown expression operator: '+JSON.stringify(operatorChar));\n\t\t\t}\n\t\t\tconst expression = Expression.from(patternBody, expressionList.length);\n\t\t\texpression.variableList.forEach(function(varspec){\n\t\t\t\tvarspec.index = Object.keys(varnames).length;\n\t\t\t\tvarnames[varspec.varname] = varspec;\n\t\t\t\tvariables[varspec.index] = varspec;\n\t\t\t});\n\t\t\texpressionList.push(expression);\n\t\t\ttokens.push(expression);\n\t\t}else if(chr.match(rule_literals)){\n\t\t\tif(typeof tokens[tokens.length-1]=='string') tokens[tokens.length-1] += chr;\n\t\t\telse tokens.push(chr);\n\t\t}else{\n\t\t\tthrow new Error('Unexpected character '+JSON.stringify(chr));\n\t\t}\n\t}\n}\nRoute.prototype.gen = function Route_gen(params){\n\tif(typeof params!='object') throw new Error('Expected arguments[0] `params` to be an object');\n\treturn this.tokens.map( (v)=>v.toString(params) ).join('');\n};\nRoute.prototype.toString = function toString(params){\n\treturn this.tokens.map( (v)=>v.toString(params) ).join('');\n};\nRoute.prototype.toJSON = function toJSON(){\n\treturn this.uriTemplate;\n};\n\nmodule.exports.Expression = Expression;\nfunction Expression(operatorChar, variableList, index){\n\tif(typeof operatorChar !== 'string') throw new Error('Expected `operatorChar` to be a string');\n\tif(!operators[operatorChar]) throw new Error('Unknown operator: '+JSON.stringify(operatorChar));\n\tvariableList.forEach(function(v){\n\t\tif(!(v instanceof Variable)) throw new Error('Expected `variableList` to be array of Variable instances');\n\t});\n\tthis.operatorChar = operatorChar;\n\tthis.prefix = operators[operatorChar].prefix;\n\tthis.separator = operators[operatorChar].separator;\n\tthis.range = operators[operatorChar].range;\n\tthis.variableList = variableList;\n\tthis.index = index;\n}\nExpression.from = function(patternBody, index){\n\t// If the first character is part of a valid variable name, assume the default operator\n\t// Else, assume the first character is a operator\n\tvar operatorChar = patternBody[0].match(/[a-zA-Z0-9_%]/) ? '' : patternBody[0] ;\n\tvar operator = operators[operatorChar];\n\tif(!operator){\n\t\tthrow new Error('Unknown expression operator: '+JSON.stringify(operator));\n\t}\n\tconst variableList = patternBody\n\t\t.substring(operatorChar.length)\n\t\t.split(/,/g)\n\t\t.map( Variable.from.bind(null, operatorChar) );\n\treturn new Expression(operatorChar, variableList, index);\n};\nExpression.prototype.toString = function toString(params){\n\tconst operator = operators[this.operatorChar];\n\tif(params){\n\t\tconst values = this.variableList.map( (v)=>v.expand(params) ).filter( (v)=>(typeof v==='string') );\n\t\tif(values.length){\n\t\t\treturn operator.prefix + values.join(operator.separator);\n\t\t}else{\n\t\t\treturn '';\n\t\t}\n\t}else{\n\t\t// toString will join the Variable#toString() values with commas\n\t\treturn '{' + this.operatorChar + this.variableList.toString() + '}';\n\t}\n};\n\nmodule.exports.Variable = Variable;\nfunction Variable(operatorChar, varname, explode, maxLength){\n\tif(typeof varname !== 'string') throw new Error('Expected `varname` to be a string');\n\tif(typeof operatorChar !== 'string') throw new Error('Expected `operatorChar` to be a string');\n\tconst operator = operators[operatorChar];\n\tif(!operators[operatorChar]) throw new Error('Expected `operator` to be a valid operator');\n\tif(typeof explode !== 'boolean') throw new Error('Expected `explode` to be a boolean');\n\tif(maxLength!==null && typeof maxLength !== 'number') throw new Error('Expected `maxLength` to be a number');\n\tthis.operatorChar = operatorChar;\n\tthis.varname = varname;\n\tthis.explode = explode;\n\tthis.maxLength = maxLength;\n\tthis.optional = true;\n\tthis.prefix = operator.prefix;\n\tthis.separator = operator.separator;\n\tthis.delimiter = operator.delimiter;\n\tthis.range = operator.range;\n\tthis.named = operator.named;\n}\nVariable.from = function(operatorChar, varspec){\n\tif(!varspec.match(rule_varspec)){\n\t\tthrow new Error('Malformed variable '+JSON.stringify(varspec));\n\t}\n\tconst separator = operators[operatorChar];\n\t// Test for explode operator\n\tconst explode = !!varspec.match(/\\*$/);\n\tconst varnameMaxLength = explode ? varspec.substring(0, varspec.length-1) : varspec;\n\tif(explode && !separator){\n\t\tthrow new Error('Variable operator '+JSON.stringify(operatorChar)+' does not work with explode modifier');\n\t}\n\t// Test for substring modifier\n\tconst varnameMaxLength_i = varnameMaxLength.indexOf(':');\n\tconst varname = varnameMaxLength_i<0 ? varnameMaxLength : varnameMaxLength.substring(0, varnameMaxLength_i);\n\tconst maxLengthStr = varnameMaxLength_i<0 ? null : varnameMaxLength.substring(varnameMaxLength_i+1);\n\tconst maxLength = maxLengthStr ? parseInt(maxLengthStr, 10) : null;\n\treturn new Variable(\n\t\toperatorChar,\n\t\tvarname,\n\t\texplode,\n\t\tmaxLength,\n\t);\n};\nVariable.prototype.toString = function(params){\n\tif(params) return this.expand(params);\n\treturn this.varname +\n\t\t(this.explode ? '*' : '') +\n\t\t(typeof this.maxLength==='number' ? ':'+this.maxLength : '');\n};\nVariable.prototype.expand = function(params){\n\tconst t = this;\n\tconst op = operators[t.operatorChar];\n\tconst varvalue = params[t.varname];\n\tconst encode = op.encode;\n\tif(typeof varvalue=='string' || typeof varvalue=='number'){\n\t\tlet value = varvalue;\n\t\tif(t.maxLength) value = value.substring(0, t.maxLength);\n\t\tif(op.named){\n\t\t\tif(op.form || value) return t.varname + '=' + encode(value);\n\t\t\telse return t.varname;\n\t\t}else{\n\t\t\treturn encode(value);\n\t\t}\n\t}else if(Array.isArray(varvalue) && varvalue.length>0){\n\t\tif(t.explode){\n\t\t\tconst items = varvalue.map(function(value){\n\t\t\t\tif(t.maxLength) value = value.toString().substring(0, t.maxLength);\n\t\t\t\tif(op.named){\n\t\t\t\t\tif(op.form || value) return t.varname + '=' + encode(value);\n\t\t\t\t\telse return t.varname;\n\t\t\t\t}else{\n\t\t\t\t\treturn encode(value);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn items.length ? items.join(t.separator) : null;\n\t\t}else{\n\t\t\tlet value = varvalue;\n\t\t\tif(t.maxLength) value = value.substring(0, t.maxLength);\n\t\t\tif(value.length===0) return null;\n\t\t\tif(op.named){\n\t\t\t\treturn t.varname + '=' + value.map(function(v){ return encode(v); }).join(',');\n\t\t\t}else{\n\t\t\t\treturn value.map(function(v){ return encode(v); }).join(',');\n\t\t\t}\n\t\t}\n\t}else if(typeof varvalue == 'object' && varvalue){\n\t\tif(t.maxLength){\n\t\t\tthrow new Error('Cannot substring object');\n\t\t}\n\t\tif(t.explode){\n\t\t\t// Apparently op.named doesn't matter in this case\n\t\t\tconst items = Object.keys(varvalue).map(function(key){\n\t\t\t\tif(op.form || varvalue[key]) return encode(key) + '=' + encode(varvalue[key]);\n\t\t\t\telse return key;\n\t\t\t});\n\t\t\treturn items.length ? items.join(t.separator) : null;\n\t\t}else{\n\t\t\tif(op.named){\n\t\t\t\tconst items = Object.keys(varvalue).map(function(key){\n\t\t\t\t\treturn encode(key) + ',' + encode(varvalue[key]);\n\t\t\t\t});\n\t\t\t\treturn items.length ? t.varname + '=' + items.join(',') : null;\n\t\t\t}else{\n\t\t\t\tconst items = Object.keys(varvalue).map(function(key){\n\t\t\t\t\treturn encode(key) + ',' + encode(varvalue[key]);\n\t\t\t\t});\n\t\t\t\treturn items.length ? items.join(',') : null;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n};\n\nmodule.exports.Result = Result;\nfunction Result(router, uri, options, route, params, remaining_state, history){\n\tthis.router = router;\n\tthis.uri = uri;\n\tthis.options = options;\n\tthis.route = route;\n\tthis.uriTemplate = route.uriTemplate;\n\tthis.matchValue = route.matchValue;\n\tthis.params = params;\n\tthis.remaining_state = remaining_state;\n\tthis.history = history;\n}\n\nResult.prototype.rewrite = function rewrite(uriTemplate, options, name){\n\tif(typeof uriTemplate==='string'){\n\t\turiTemplate = new Route(uriTemplate, options, name);\n\t}\n\tvar uri = uriTemplate.gen(this.params);\n\n\treturn new Result(this.router, uri, options, uriTemplate, this.params);\n};\n\nResult.prototype.next = function next(){\n\treturn this.router.resolveURI(this.uri, this.options, this.remaining_state);\n};\n\nObject.defineProperty(Result.prototype, \"template\", {\n\tget: function templateGet(){ return this.uriTemplate; },\n\tset: function templateSet(v){ this.uriTemplate = v; },\n});\n\nObject.defineProperty(Result.prototype, \"name\", {\n\tget: function templateGet(){ return this.matchValue; },\n});\n\nRouter.prototype.addTemplate = function addTemplate(uriTemplate, options, matchValue){\n\tconst self = this;\n\tconst nodeMap = {};\n\tif(typeof uriTemplate=='object' && options===undefined && matchValue===undefined){\n\t\tvar route = uriTemplate;\n\t\turiTemplate = route.uriTemplate;\n\t\toptions = route.options;\n\t\tmatchValue = route.matchValue;\n\t}else{\n\t\troute = new Route(uriTemplate, options, matchValue);\n\t}\n\n\t// Iterate over tokens in route to add the route to the tree\n\tvar node = this.tree;\n\tvar template_i = 0;\n\troute.tokens.forEach(function addExpression(expression){\n\t\tif(typeof expression=='string'){\n\t\t\tfor(var i=0; i<expression.length; i++){\n\t\t\t\tvar chr = expression[i];\n\t\t\t\tif(chr==='%' && expression[i+1] && expression[i+2]){\n\t\t\t\t\tchr += expression[i+1] + expression[i+2];\n\t\t\t\t\tif(!chr.match(/^%[0-9A-F]{2}$/)) throw new Error('Assert: Invalid pct-encoded character');\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t\t// Descend node into the branch, creating it if it doesn't exist\n\t\t\t\tnode.match_chr[chr] = node.match_chr[chr] || new Node(chr, ++self.nid);\n\t\t\t\tnode = node.match_chr[chr];\n\t\t\t\tnodeMap[node.nid] = {};\n\t\t\t\tnode.chr_offset = template_i;\n\t\t\t\ttemplate_i++;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\texpression.variableList.forEach(function addPath(varspec){\n\t\t\tif(typeof varspec!=='object') throw new Error('Unknown type');\n\t\t\tvar setNext = [];\n\t\t\tif(varspec.optional){\n\t\t\t\tsetNext.push(node);\n\t\t\t}\n\t\t\tif(varspec.prefix){\n\t\t\t\tnode.match_pfx[varspec.prefix] = node.match_pfx[varspec.prefix] || new Node(varspec.prefix, ++self.nid);\n\t\t\t\tnode = node.match_pfx[varspec.prefix];\n\t\t\t\tnodeMap[node.nid] = {\n\t\t\t\t\texpression: expression,\n\t\t\t\t\tvarspec: varspec,\n\t\t\t\t\tvpush: varspec.explode && varspec.index,\n\t\t\t\t};\n\t\t\t\t//var prefixNode = node;\n\t\t\t}\n\t\t\tnode.list_set = node.list_set || {};\n\t\t\tnode.list_set[varspec.range] = node.list_set[varspec.range] || new Node(varspec.range, ++self.nid);\n\t\t\tnode.list_set_keys = Object.keys(node.list_set).sort(sortRanges);\n\t\t\tnode = node.list_set[varspec.range];\n\t\t\tvar rangeNode = node;\n\t\t\tnodeMap[node.nid] = {\n\t\t\t\texpression: expression,\n\t\t\t\tvarspec: varspec,\n\t\t\t\tvindex: varspec.index,\n\t\t\t};\n\t\t\tnode.match_range = varspec.range;\n\t\t\tnode.match_range_vindex = varspec.index;\n\t\t\tif(varspec.explode){\n\t\t\t\tnode.match_pfx[varspec.delimiter] = node.match_pfx[varspec.delimiter] || new Node(varspec.delimiter, ++self.nid);\n\t\t\t\tvar delimiterNode = node.match_pfx[varspec.delimiter];\n\t\t\t\tnodeMap[delimiterNode.nid] = {\n\t\t\t\t\texpression: expression,\n\t\t\t\t\tvarspec: varspec,\n\t\t\t\t\tvpush: varspec.explode && varspec.index,\n\t\t\t\t};\n\t\t\t\tdelimiterNode.list_set = delimiterNode.list_set || {};\n\t\t\t\tdelimiterNode.list_set[varspec.range] = rangeNode;\n\t\t\t\tdelimiterNode.list_set_keys = Object.keys(delimiterNode.list_set).sort(sortRanges);\n\t\t\t\tsetNext.push(delimiterNode);\n\t\t\t}\n\t\t\tnode.list_next = node.list_next || new Node(undefined, ++self.nid);\n\t\t\tnode = node.list_next;\n\t\t\tsetNext.forEach(function(n){\n\t\t\t\tn.list_next = node;\n\t\t\t});\n\t\t\ttemplate_i++;\n\t\t});\n\t});\n\t// Add EOF condition\n\t{\n\t\tnode.match_eof = node.match_eof || new Node(null, ++self.nid);\n\t\tnode = node.match_eof;\n\t\tnode.chr_offset = template_i;\n\t\ttemplate_i++;\n\t}\n\tif(node.template_match){\n\t\tthrow new Error('Route already defined');\n\t}\n\tnode.template_match = route;\n\tnode.template_nodes = nodeMap;\n\n\tthis.routeSet.add(route);\n\tthis.templateRouteMap.set(uriTemplate, route);\n\tif(!this.valueRouteMap.has(matchValue)){\n\t\tthis.valueRouteMap.set(matchValue, route);\n\t}\n\treturn route;\n};\n\nvar S = {\n\tEOF: 10, // Expending end of input\n\tCHR: 20, // Expecting a character, or \"%\" to begin a pct-encoded sequence\n\tPCT1: 31, // Expecting first hex char of a pct-encoded sequence\n\tPCT2: 32, // Expecting the second hex char of a pct-encoded sequence\n};\n// Enable for testing\nfor(var n in S) S[n]=n;\n\n// Some constants\nvar MATCH_EOF = 'match_eof';\nvar MATCH_CHR = 'match_chr';\nvar MATCH_PFX = 'match_pfx';\nvar MATCH_RANGE = 'match_range';\n\nvar MATCH_SORT = {\n\tINIT: 0,\n\tMATCH_CHR: 10,\n\tMATCH_PFX: 20,\n\tMATCH_RANGE: {\n\t\tUNRESERVED: 30,\n\t\tRESERVED_UNRESERVED: 31,\n\t\tQUERY: 32,\n\t},\n};\n\nfunction State(prev, offset, branch, chr, type, sort){\n\tif(prev && !(prev instanceof State)) throw new Error('prev not instanceof State');\n\tif(prev && (offset <= prev.offset)) throw new Error('out-of-order state history, expected '+(prev.offset+1)+' got '+offset);\n\tif(!(branch instanceof Node)) throw new Error('branch not instanceof Node');\n\tif(typeof sort!=='number') throw new Error('Expected `sort` to be a number');\n\t// The state at the previous character\n\tthis.prev = prev;\n\t// The current character position\n\tthis.offset = offset;\n\t// Branch of the tree the match made found on\n\tthis.branch = branch;\n\t// The character(s) being consumed\n\tthis.chr = chr;\n\t// The type of match that was made (match_pfx, etc.)\n\tthis.type = type;\n\t// The sort order of the match that was made\n\tthis.sort = sort;\n\t// The order the match was inserted into the tree, e.g. in case an expression is skipped, prefer the earlier matched one\n\tthis.weight = 0;\n}\n\n// like resolveString, but additionally verify that the URI matches the legal HTTP form\n// userinfo and fragment components are not allowed\n// Router.prototype.resolveRequest = function resolveRequest(scheme, host, target, flags, initial_state){\n// };\n\n// like resolveString, but additionally verify that the URI matches the legal HTTP form\n// userinfo and fragment components are not allowed\nRouter.prototype.resolveRequestURI = function resolveRequestURI(uri, flags, initial_state){\n\tif(typeof uri!=='string') throw new Error('Expected arguments[0] `uri` to be a string');\n\t// First verify the URI looks OK, save the components, then parse it normally\n\t// scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tconst scheme_m = uri.match(/^([a-zA-Z][a-zA-Z0-9+.-]*):/);\n\tif(!scheme_m) throw new Error('parseURI: `uri` missing valid scheme');\n\t// URI appears to be valid, now resolve it normally\n\treturn this.resolveURI(uri, flags, initial_state);\n};\n\n// TODO rename this to `resolveString`\nRouter.prototype.resolveURI = function resolveString(uri, flags, initial_state){\n\tif(typeof uri!=='string') throw new Error('Expected arguments[0] `uri` to be a string');\n\tvar self = this;\n\tif(initial_state){\n\t\tvar parse_backtrack = initial_state.slice();\n\t}else{\n\t\tparse_backtrack = [new State(null, 0, this.tree, '', MATCH_CHR, MATCH_SORT.INIT, null)];\n\t}\n\tfunction consumeInputCharacter(offset, chr, state, branch){\n\t\tif(!(branch instanceof Node)) throw new Error('branch not instanceof Node');\n\t\tconst stack = [];\n\t\tfunction match(branch, type, sort){\n\t\t\tstack.push(new State(state, offset+1, branch, chr, type, sort));\n\t\t}\n\n\t\t// EOF always matches first\n\t\tif(chr===null && branch.match_eof){\n\t\t\tmatch(branch.match_eof, MATCH_EOF, MATCH_SORT.MATCH_CHR);\n\t\t}\n\n\t\t// First try patterns with exact character matches\n\t\tif(branch.match_chr[chr]){\n\t\t\tmatch(branch.match_chr[chr], MATCH_CHR, MATCH_SORT.MATCH_CHR);\n\t\t}\n\n\t\t// If the match_pfx isn't matched, then skip over the following match_range too...\n\t\tif(branch.match_pfx[chr]){\n\t\t\tmatch(branch.match_pfx[chr], MATCH_PFX, MATCH_SORT.MATCH_PFX);\n\t\t}\n\n\t\t// Then try patterns with range matches\n\t\tfor(var i=0; i<branch.list_set_keys.length; i++){\n\t\t\tconst rangeName = branch.list_set_keys[i];\n\t\t\tconsumeInputCharacter(offset, chr, state, branch.list_set[rangeName]).forEach(stack.push.bind(stack));\n\t\t}\n\n\t\tif(branch.match_range && branch.match_range.test(chr)){\n\t\t\tmatch(branch, MATCH_RANGE, branch.match_range.sortSize);\n\t\t}\n\t\t// If the expression is optional, try skipping over it, too\n\t\tif(branch.list_next){\n\t\t\tconsumeInputCharacter(offset, chr, state, branch.list_next).forEach(stack.push.bind(stack));\n\t\t}\n\t\treturn stack;\n\t}\n\tfor(var offset = 0;;){\n\t\tvar state = parse_backtrack.shift();\n\t\tif(!state) break;\n\t\toffset = state.offset;\n\t\tif(offset > uri.length) throw new Error('Overgrew offset');\n\t\t// This will set chr===undefined for the EOF position\n\t\t// We could also use another value like \"\\0\" or similar to represent EOF\n\t\tvar chr = (offset<uri.length) ? uri[offset] : null;\n\t\tif(chr=='%' && uri[offset+1] && uri[offset+2]){\n\t\t\tchr += uri[offset+1] + uri[offset+2];\n\t\t\tif(!chr.match(/^%[0-9A-F]{2}$/)) throw new Error('Invalid pct-encoded character');\n\t\t\toffset += 2;\n\t\t}\n\t\tvar stack = consumeInputCharacter(offset, chr, state, state.branch);\n\t\t// Take all the equal alternatives that matched the EOF and if there's exactly one, return it.\n\t\tif(offset==uri.length){\n\t\t\tvar solutions = stack\n\t\t\t\t.filter(function(v){ return v.branch && v.branch.template_match; })\n\t\t\t\t.map(function(v){ return finish(v); });\n\t\t\tif(solutions.length>1){\n\t\t\t\treturn solutions[0];\n\t\t\t\t//throw new Error('Multiple equal templates matched');\n\t\t\t}else if(solutions.length==1){\n\t\t\t\treturn solutions[0];\n\t\t\t}\n\t\t}\n\t\t// Force the order of matches to prefer single-character matches (the `sort`)\n\t\t// Otherwise, preserve insertion order (the `weight`)\n\t\t// stack.forEach(function(v, i){ v.weight = i; });\n\t\t// stack.sort(function(a, b){ return (a.sort - b.sort) || (a.weight - b.weight); });\n\t\t// stack.forEach(function(v){ parse_backtrack.push(v); });\n\t\tstack.forEach(function(v){ if(v.type==MATCH_CHR) parse_backtrack.push(v); });\n\t\tstack.forEach(function(v){ if(v.type==MATCH_PFX) parse_backtrack.push(v); });\n\t\tstack.forEach(function(v){ if(v.type==MATCH_RANGE) parse_backtrack.push(v); });\n\t}\n\n\tfunction finish(solution){\n\t\tvar history = [];\n\t\tvar route = solution.branch.template_match;\n\t\tvar nodeMap = solution.branch.template_nodes;\n\t\tfor(var item=solution; item.prev; item=item.prev){\n\t\t\tvar branch = item.branch;\n\t\t\thistory.unshift({\n\t\t\t\tchr: item.chr,\n\t\t\t\toffset: item.prev.offset,\n\t\t\t\ttype: item.type,\n\t\t\t\tvindex: nodeMap[branch.nid] && nodeMap[branch.nid].vindex,\n\t\t\t\tvpush: nodeMap[branch.nid] && nodeMap[branch.nid].vpush,\n\t\t\t\tnode: branch,\n\t\t\t\tnid: branch.nid,\n\t\t\t\ttransition: nodeMap[branch.nid],\n\t\t\t});\n\t\t}\n\t\tvar var_list = [];\n\t\tfor(var item_i=0; item_i<history.length; item_i++){\n\t\t\tconst item = history[item_i];\n\t\t\tif(item.chr && !item.node.test(item.chr)){\n\t\t\t\tthrow new Error('Assert: Node range '+item.node.range+' mismatches character['+item_i+'] '+item.chr);\n\t\t\t}\n\t\t\tvar chr = item.chr || null;\n\t\t\tif(item.vpush!==undefined){\n\t\t\t\tvar_list[item.vpush] = var_list[item.vpush] || [];\n\t\t\t\tvar_list[item.vpush].push('');\n\t\t\t}else if(item.vindex!==undefined){\n\t\t\t\tvar varv = var_list[item.vindex];\n\t\t\t\tif(Array.isArray(varv)){\n\t\t\t\t\tif(chr) varv[varv.length-1] = varv[varv.length-1] + chr;\n\t\t\t\t}else{\n\t\t\t\t\tif(chr) var_list[item.vindex] = (varv||'') + chr;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar bindings = {};\n\t\troute.variables.forEach(function(v){\n\t\t\tif(var_list[v.index]!==undefined){\n\t\t\t\tbindings[v.varname] = Array.isArray(var_list[v.index]) ? var_list[v.index].map(decodeURIComponent) : decodeURIComponent(var_list[v.index]) ;\n\t\t\t}\n\t\t});\n\t\treturn new Result(self, uri, flags, route, bindings, parse_backtrack, history);\n\t}\n};\n","var map = {\n\t\"./Pipedrive/ReachCounter/ReachCounter\": \"./src/lib/controller/Pipedrive/ReachCounter/ReachCounter.ts\",\n\t\"./Pipedrive/ReachCounter/ReachCounter.ts\": \"./src/lib/controller/Pipedrive/ReachCounter/ReachCounter.ts\",\n\t\"./Pipedrive/ReachCounter/ReachCounter2\": \"./src/lib/controller/Pipedrive/ReachCounter/ReachCounter2.ts\",\n\t\"./Pipedrive/ReachCounter/ReachCounter2.ts\": \"./src/lib/controller/Pipedrive/ReachCounter/ReachCounter2.ts\",\n\t\"./TamperController\": \"./src/lib/controller/TamperController.ts\",\n\t\"./TamperController.ts\": \"./src/lib/controller/TamperController.ts\"\n};\n\n\nfunction webpackAsyncContext(req) {\n\treturn webpackAsyncContextResolve(req).then(__webpack_require__);\n}\nfunction webpackAsyncContextResolve(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\t\treturn map[req];\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.resolve = webpackAsyncContextResolve;\nwebpackAsyncContext.id = \"./src/lib/controller eager recursive ^\\\\.\\\\/.*$\";\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import App from \"../lib\";\n\n// Html section\nconst title = 'BigBrowser - Sandbox';\ndocument.title = title\ndocument.querySelector(\"body\").innerHTML = `<h1>${title}</h1>`;\n\n// App section\nconst app = new App();\napp.init();"],"names":[],"sourceRoot":""}